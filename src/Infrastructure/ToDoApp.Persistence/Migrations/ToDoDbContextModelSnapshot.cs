// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoApp.Persistence;

#nullable disable

namespace ToDoApp.Persistence.Migrations
{
    [DbContext(typeof(ToDoDbContext))]
    partial class ToDoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDoApp.Domain.Entities.ToDoItem", b =>
                {
                    b.Property<int>("ToDoItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToDoItemId"));

                    b.Property<string>("ToDoDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ToDoIsDone")
                        .HasColumnType("bit");

                    b.Property<int?>("ToDoItemId1")
                        .HasColumnType("int");

                    b.Property<string>("ToDoItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ToDoItemId");

                    b.HasIndex("ToDoItemId1");

                    b.ToTable("ToDoItems");

                    b.HasData(
                        new
                        {
                            ToDoItemId = 1,
                            ToDoDescription = "",
                            ToDoIsDone = false,
                            ToDoItemName = "MyFirstTodo"
                        },
                        new
                        {
                            ToDoItemId = 2,
                            ToDoDescription = "",
                            ToDoIsDone = false,
                            ToDoItemName = "MySecondTodo"
                        },
                        new
                        {
                            ToDoItemId = 3,
                            ToDoDescription = "",
                            ToDoIsDone = false,
                            ToDoItemName = "MyThirdTodo"
                        },
                        new
                        {
                            ToDoItemId = 4,
                            ToDoDescription = "",
                            ToDoIsDone = false,
                            ToDoItemName = "MyFourthTodo"
                        });
                });

            modelBuilder.Entity("ToDoApp.Domain.Entities.ToDoItem", b =>
                {
                    b.HasOne("ToDoApp.Domain.Entities.ToDoItem", null)
                        .WithMany("ToDoItems")
                        .HasForeignKey("ToDoItemId1");
                });

            modelBuilder.Entity("ToDoApp.Domain.Entities.ToDoItem", b =>
                {
                    b.Navigation("ToDoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
